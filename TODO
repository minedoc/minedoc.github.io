== Bugs ==

== Todo ==
- init page: if deep link -> open the database linked, must include db in URL
- power down webrtc and websocket after a few minutes in the background (mobile only)
- deduplicate render calls for remote changes
  eg once a second

== Improvements ==
improve ref
  make computed period divisible
    they are synchronized so we don't get LCM delay
    [0.1s, 1s, 10s, 1m, 10m, 1h]
    how to ensure it flows smoothly?
  verify debounce works

reduce need for references to app root
  implicit binding of event handlers and data it can manipulate?

ergonomics
  this is hard to reason about and debug
  code is all over the place especially if we have multiple pages

use consistent type for note and draft object - avoid missing fields?

== Thoughts ==

back button
  different action for UI back vs browser back - no it's confusing
  never block back button - take the sensible option
  never ask before leaving app

how to map events to data
  if widget is simple: use id = e.dataset.id
  if widget is complex: use id = e.closest('[data-id]').dataset.id
  flat addressing with global key works

pages
  url is the entire state, everything not included in url is lost on refresh/nav
  TODO: what if we want more flexibility
    multiple page visible simultaneously
    pages can be instantiated
    see tablet view in android

multi database
  outerjoin with dynamic refs list
    [a,b,c].outerJoin((...items) => { return items[selectedDb()]; })
    need in addition to trigger an update when the reflist itself change (need to observe it)
    current outerJoin will merge all events together
  dump everything into one big table and use a filter on the database

when there is no network connectivity makeSocket will throw console error
  this is unstoppable due to chrome specific rule
